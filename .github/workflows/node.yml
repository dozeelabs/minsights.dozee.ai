name: Build & Deploy

on:
  pull_request:
    types:
      - closed
    branches: [master]
  push:
    branches: [sit]

env:
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: dozee/app/package-lock.json

      - name: Build
        # working-directory: dozee/app
        run: |
          npm install
          CI=false npm run build
          echo github.ref_name

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Push to S3
        # working-directory: dozee/app
        run: aws s3 sync ./dist s3://dozee.cloud/${{ github.repository }}/${BRANCH_NAME}

      - name: Cloudfront Invalidation in SIT
        if: github.ref_name == 'sit'
        uses: gagoar/invoke-aws-lambda@master
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REGION: ap-south-1
          FunctionName: InvalidateCloudfront
          Payload: '{"DistributionId": "E1F3SLZL36TLK1"}'

      - name: Cloudfront Invalidation in master
        if: github.ref_name == 'master'
        uses: gagoar/invoke-aws-lambda@master
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REGION: ap-south-1
          FunctionName: InvalidateCloudfront
          Payload: '{"DistributionId": "placeholder"}'
