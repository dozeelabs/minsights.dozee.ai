import React, { useMemo, useState } from "react";
import { parseCookie } from "@/utils/Auth";
import { fetchAllDetectionData } from "@/utils/detectionDataModification";
import { ModifiedDetectionData } from "../../../types/apiResponse/apis";
import DetectionTableUi from "@/components/Detection/orglevel/DetectionTableUi";
import SummaryBox from "@/components/Detection/orglevel/summaryBox";
import Head from "next/head";
interface Props {
  data: any;
  date: string;
  orgName: string;
}

export async function getServerSideProps<GetServerSideProps>(context: any) {
  const { AccessToken } = parseCookie(context.req.headers.cookie);
  try {
    const response = await fetchAllDetectionData(AccessToken);
    const filteredData: any = {};
    for (let date in response) {
      filteredData[date] = response[date].filter((org: any) => {
        return org.orgId === context.query.orgId;
      });
    }

    if (filteredData.length === 0) {
      return {
        redirect: {
          destination: "/detection",
          permanent: false,
        },
      };
    }
    return {
      props: {
        data: filteredData,
        date: context.query.date,
        orgName: filteredData[context.query.date][0].orgName,
      },
    };
  } catch {
    return {
      redirect: {
        destination: "/detection",
        permanent: false,
      },
    };
  }
}
function Index({ data, date, orgName }: any) {
  const [dateInput, setDateInput] = useState<string>(
    date ? date : new Date().toLocaleDateString("fr-CA")
  );

  const dataForSelecetdDate: ModifiedDetectionData[] = useMemo(() => {
    try {
      const temp: ModifiedDetectionData = {
        ...data[dateInput][0],
      };
      temp.data.sort((a, b) => b.Epochs - a.Epochs);
      return [temp];
    } catch {
      return [];
    }
  }, [dateInput]);

  return (

    <>
      <Head>
        <title>Detection</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SummaryBox
        totaluser={dataForSelecetdDate[0]?.data.length}
        orgName={orgName}
        setDateInput={setDateInput}
        dateInput={dateInput}
        uploadsForSelecetedDate={dataForSelecetdDate[0]?.totalUploads}
      />

      <DetectionTableUi dataForSelecetdDate={dataForSelecetdDate} />
    </>
  );
}

export default Index;